 

 @page
@model IndexModel
@{
    ViewData["Title"] = "Dashboard";
}

<!-- Begin Page Content -->
<div class="container-fluid">

    <!-- Page Heading -->
    <header class="mb-4 text-center">
        <h1 class="h3 text-primary fw-bold">Welcome to KabulBank</h1>
    </header>

    <!-- Summary Cards Row -->
    <div class="row justify-content-center">
        <!-- Number of Customers Card -->
        <div class="col-lg-4 col-md-6 mb-4">
            <div class="card border-left-primary shadow-sm h-100 py-3 card-hover">
                <div class="card-body d-flex align-items-center">
                    <div class="me-3">
                        <i class="fas fa-users fa-3x text-gray-400"></i>
                    </div>
                    <div>
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                            Number of Customers
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                             @(Model.Statistics?.CustomerCount ?? 1111) 
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Number of Accounts Card -->
        <div class="col-lg-4 col-md-6 mb-4">
            <div class="card border-left-success shadow-sm h-100 py-3 card-hover">
                <div class="card-body d-flex align-items-center">
                    <div class="me-3">
                        <i class="fas fa-university fa-3x text-gray-400"></i>
                    </div>
                    <div>
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                            Number of Accounts
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            @(Model.Statistics?.AccountCount ?? 6565)
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Total Bank Balance Card -->
        <div class="col-lg-4 col-md-6 mb-4">
            <div class="card border-left-info shadow-sm h-100 py-3 card-hover">
                <div class="card-body d-flex align-items-center">
                    <div class="me-3">
                        <i class="fas fa-wallet fa-3x text-gray-400"></i>
                    </div>
                    <div>
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                            Total Bank Balance
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            @(Model.Statistics?.TotalBalance != null
                                ? Model.Statistics.TotalBalance.ToString("C")
                                : "197 151 543,10 $")
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Call-to-Action (CTA) Section -->
    <section class="text-center mt-3">
        <p class="text-muted">
            Manage customers, view account details, or make transactions easily.
        </p>
        <a href="/Transfer" class="btn btn-primary btn-lg">
            <i class="fas fa-exchange-alt"></i> Transfer Funds
        </a>
        <a href="/Deposit" class="btn btn-success btn-lg">
            <i class="fas fa-dollar-sign"></i> Deposit Funds
        </a>
        <a href="/Withdraw" class="btn btn-danger btn-lg">
            <i class="fas fa-money-bill-alt"></i> Withdraw Money
        </a>
    </section>
</div>

<!-- Custom Styles -->
<style>
    .card-hover {
        transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
        cursor: pointer;
    }

        .card-hover:hover {
            transform: translateY(-5px);
            box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.2);
        }

    .btn-lg {
        margin: 10px;
    }
</style>

<!-- Live Statistics Update Script -->
<script>
    document.addEventListener("DOMContentLoaded", function () {
        function updateStatistics() {
            fetch('/api/statistics')  // Your API endpoint
                .then(response => response.json())
                .then(data => {
                    document.getElementById("totalCustomers").innerText = data.customerCount || 5369;
                    document.getElementById("totalAccounts").innerText = data.accountCount || 4500;
                    document.getElementById("totalBalance").innerText = data.totalBalance ? `$${data.totalBalance.toFixed(2)}` : "197 151 543,10 kr";
                })
                .catch(error => console.error("Error fetching statistics:", error));
        }

        // Initial fetch
        updateStatistics();

        // Auto-update every 30 seconds
        setInterval(updateStatistics, 30000);
    });
</script> 















